{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","filterReducer","createReducer","_","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContacts","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactsMutation","useAddContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ContactForm","useState","name","setName","phone","setPhone","contacts","data","isLoading","nameInputId","shortid","generate","phoneInputId","handleChange","e","target","value","reset","className","s","form","onSubmit","preventDefault","sameContactName","find","contact","toLowerCase","sameContactPhone","toast","warning","label","htmlFor","input","type","pattern","title","required","onChange","id","button","disabled","ContactListItem","isDeleting","list","onClick","getFilter","state","filter","ContactList","error","isError","useSelector","filteredContacts","includes","showNotFound","length","originalStatus","showFilteredContacts","item","map","Filter","dispatch","useDispatch","App","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2c74201.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2M4vE\",\"label\":\"ContactForm_label__1REru\",\"input\":\"ContactForm_input__2WWCO\",\"button\":\"ContactForm_button__1tsqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__120h_\",\"noContacts\":\"ContactList_noContacts__1Mst0\",\"list\":\"ContactList_list__2Dc7K\",\"button\":\"ContactList_button__2x7tK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2w7zQ\",\"input\":\"Filter_input__3O-tP\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contacts',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61f3c85210f0f7001768c62e.mockapi.io',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContacts: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactsMutation,\r\n  useAddContactMutation,\r\n} = contactsApi;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsApi } from 'redux/contacts/contacts-reducer';\r\nimport { filterReducer } from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(logger, contactsApi.middleware),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import { useState } from 'react';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contacts-reducer';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const nameInputId = shortid.generate();\n  const phoneInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const sameContactName = contacts.find(\n      contact => name.toLowerCase() === contact.name.toLowerCase(),\n    );\n\n    const sameContactPhone = contacts.find(contact => phone === contact.phone);\n\n    if (sameContactName && sameContactPhone) {\n      toast.warning(`${name} is already in contacts `);\n      toast.warning(`${phone} is already in contacts `);\n    } else if (sameContactName) {\n      toast.warning(`${name} is already in contacts `);\n    } else if (sameContactPhone) {\n      toast.warning(`${phone} is already in contacts `);\n    } else {\n      addContact({ name, phone });\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          id={nameInputId}\n        />\n      </label>\n      <label className={s.label} htmlFor={phoneInputId}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          id={phoneInputId}\n        />\n      </label>\n      <button className={s.button} type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Adding contact' : 'Add contact'}\n      </button>\n    </form>\n  );\n}\n","import { useDeleteContactsMutation } from 'redux/contacts/contacts-reducer';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.scss';\r\n\r\nexport function ContactListItem({ id, name, phone }) {\r\n  const [deleteContacts, { isLoading: isDeleting }] =\r\n    useDeleteContactsMutation();\r\n\r\n  return (\r\n    <li className={s.list}>\r\n      <span>\r\n        {name}: {phone}\r\n      </span>\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        onClick={() => deleteContacts(id)}\r\n        disabled={isDeleting}\r\n      >\r\n        {isDeleting ? 'Deleting..' : 'Delete'}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n","export const getFilter = state => state.filter;\r\n","import { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contacts/contacts-reducer';\nimport { ContactListItem } from './ContactListItem';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\nimport s from './ContactList.module.scss';\n\nfunction ContactList() {\n  const { data: contacts, error, isError } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n\n  let filteredContacts = [];\n  if (contacts) {\n    filteredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  const showNotFound =\n    filteredContacts.length === 0 || (isError && error.originalStatus === 404);\n  const showFilteredContacts = filteredContacts && !isError;\n  return (\n    <>\n      {showNotFound && \"You haven't contacts!\"}\n      {showFilteredContacts && (\n        <ul className={s.item}>\n          {filteredContacts.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport s from './Filter.module.scss';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label className={s.label}>\n        Find contact by name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </>\n  );\n}\n\nexport default Filter;\n","import { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}